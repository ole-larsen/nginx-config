proxy_cache_path  /var/cache/nginx/vhost1  levels=1:2    keys_zone=vhost1:32m inactive=24h  max_size=1g;

limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip_vhost1:10m;
limit_req_zone  $binary_remote_addr zone=req_limit_per_ip_vhost1:10m rate=5r/s;

server {
	listen 80;
	listen [::]:80;

	root /var/www/vhost1;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name sitename.example.com www.sitename.example.com;

	location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/vhost1;
        }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
	
	# Redirect everything else to https
	return 301 https://$server_name$request_uri;
}


server {

    listen [::]:443 http2 ssl; # managed by Certbot
    listen 443 http2 ssl; # managed by Certbot
    
  	server_name sitename.example.com www.sitename.example.com;

    ssl_certificate /etc/letsencrypt/live/sitename.example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sitename.example.com/privkey.pem; # managed by Certbot

    ssl_buffer_size 8k;

    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # Optimize session cache
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
   
    access_log /var/log/nginx/vhost1/access.log;
    error_log /var/log/nginx/vhost1/error.log;

    client_body_timeout 120s;
    client_header_timeout 120s;

    limit_conn conn_limit_per_ip_love1 100;
    limit_req zone=req_limit_per_ip_love1 burst=10 nodelay;
    
    client_body_buffer_size 200K;
    client_header_buffer_size 2k;
    client_max_body_size 200k;
    large_client_header_buffers 3 1k;

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/vhost1;
    }
    
    location / {
      
      proxy_http_version  1.1;
      proxy_set_header Upgrade           $http_upgrade;
      #proxy_set_header Connection        "upgrade";
      proxy_set_header Connection "";

      proxy_set_header Host              $host; 
      proxy_set_header Referer           $host;		  
                  
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  $server_port;
      
      proxy_bind $server_addr;
      sub_filter '#website' 'sitename.example.com';
      sub_filter_once off;
      sub_filter_types *;

      proxy_pass http://backend-proxy;

      proxy_buffering        on;
      
      proxy_cache            vhost1;
      proxy_cache_valid any 5m;
      proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;

      # POST requests and urls with a query string should always go to PHP
      if ($request_method = POST) {
        expires -1;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      }

      #Don't cache if there is a cookie called PHPSESSID
      if ($http_cookie ~* "PHPSESSID"){
        expires -1;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      }

      # Don't cache uris containing the following segments
      if ($request_uri ~* "profile/|/path|captcha|sitemap(_index)?.xml") {
        expires -1;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      }

      #timeouts
      proxy_connect_timeout 180;
      proxy_send_timeout   180;
      proxy_read_timeout   180;
      send_timeout         180;
    }
}
